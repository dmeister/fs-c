// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fs-c.proto

package de.pc2.dedup.fschunk;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ChunkRunOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string start_date = 1;
    boolean hasStartDate();
    String getStartDate();
  }
  public static final class ChunkRun extends
      com.google.protobuf.GeneratedMessage
      implements ChunkRunOrBuilder {
    // Use ChunkRun.newBuilder() to construct.
    private ChunkRun(Builder builder) {
      super(builder);
    }
    private ChunkRun(boolean noInit) {}
    
    private static final ChunkRun defaultInstance;
    public static ChunkRun getDefaultInstance() {
      return defaultInstance;
    }
    
    public ChunkRun getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_ChunkRun_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_ChunkRun_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string start_date = 1;
    public static final int START_DATE_FIELD_NUMBER = 1;
    private java.lang.Object startDate_;
    public boolean hasStartDate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getStartDate() {
      java.lang.Object ref = startDate_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          startDate_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStartDateBytes() {
      java.lang.Object ref = startDate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        startDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      startDate_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasStartDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getStartDateBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getStartDateBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static de.pc2.dedup.fschunk.Protocol.ChunkRun parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.ChunkRun parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.ChunkRun parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.ChunkRun parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.ChunkRun parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.ChunkRun parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.ChunkRun parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.pc2.dedup.fschunk.Protocol.ChunkRun parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.pc2.dedup.fschunk.Protocol.ChunkRun parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.ChunkRun parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.pc2.dedup.fschunk.Protocol.ChunkRun prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements de.pc2.dedup.fschunk.Protocol.ChunkRunOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_ChunkRun_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_ChunkRun_fieldAccessorTable;
      }
      
      // Construct using de.pc2.dedup.fschunk.Protocol.ChunkRun.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        startDate_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.pc2.dedup.fschunk.Protocol.ChunkRun.getDescriptor();
      }
      
      public de.pc2.dedup.fschunk.Protocol.ChunkRun getDefaultInstanceForType() {
        return de.pc2.dedup.fschunk.Protocol.ChunkRun.getDefaultInstance();
      }
      
      public de.pc2.dedup.fschunk.Protocol.ChunkRun build() {
        de.pc2.dedup.fschunk.Protocol.ChunkRun result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private de.pc2.dedup.fschunk.Protocol.ChunkRun buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        de.pc2.dedup.fschunk.Protocol.ChunkRun result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public de.pc2.dedup.fschunk.Protocol.ChunkRun buildPartial() {
        de.pc2.dedup.fschunk.Protocol.ChunkRun result = new de.pc2.dedup.fschunk.Protocol.ChunkRun(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startDate_ = startDate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.pc2.dedup.fschunk.Protocol.ChunkRun) {
          return mergeFrom((de.pc2.dedup.fschunk.Protocol.ChunkRun)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.pc2.dedup.fschunk.Protocol.ChunkRun other) {
        if (other == de.pc2.dedup.fschunk.Protocol.ChunkRun.getDefaultInstance()) return this;
        if (other.hasStartDate()) {
          setStartDate(other.getStartDate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasStartDate()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              startDate_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string start_date = 1;
      private java.lang.Object startDate_ = "";
      public boolean hasStartDate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getStartDate() {
        java.lang.Object ref = startDate_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          startDate_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStartDate(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        startDate_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startDate_ = getDefaultInstance().getStartDate();
        onChanged();
        return this;
      }
      void setStartDate(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        startDate_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:de.pc2.dedup.fschunk.ChunkRun)
    }
    
    static {
      defaultInstance = new ChunkRun(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:de.pc2.dedup.fschunk.ChunkRun)
  }
  
  public interface FileOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string filename = 1;
    boolean hasFilename();
    String getFilename();
    
    // optional uint64 size = 2;
    boolean hasSize();
    long getSize();
    
    // optional string type = 3;
    boolean hasType();
    String getType();
    
    // optional uint32 chunkCount = 4;
    boolean hasChunkCount();
    int getChunkCount();
    
    // optional string label = 5;
    boolean hasLabel();
    String getLabel();
    
    // optional bool partial = 6 [default = false];
    boolean hasPartial();
    boolean getPartial();
  }
  public static final class File extends
      com.google.protobuf.GeneratedMessage
      implements FileOrBuilder {
    // Use File.newBuilder() to construct.
    private File(Builder builder) {
      super(builder);
    }
    private File(boolean noInit) {}
    
    private static final File defaultInstance;
    public static File getDefaultInstance() {
      return defaultInstance;
    }
    
    public File getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_File_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_File_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string filename = 1;
    public static final int FILENAME_FIELD_NUMBER = 1;
    private java.lang.Object filename_;
    public boolean hasFilename() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getFilename() {
      java.lang.Object ref = filename_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          filename_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFilenameBytes() {
      java.lang.Object ref = filename_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        filename_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint64 size = 2;
    public static final int SIZE_FIELD_NUMBER = 2;
    private long size_;
    public boolean hasSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getSize() {
      return size_;
    }
    
    // optional string type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private java.lang.Object type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          type_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional uint32 chunkCount = 4;
    public static final int CHUNKCOUNT_FIELD_NUMBER = 4;
    private int chunkCount_;
    public boolean hasChunkCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getChunkCount() {
      return chunkCount_;
    }
    
    // optional string label = 5;
    public static final int LABEL_FIELD_NUMBER = 5;
    private java.lang.Object label_;
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          label_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool partial = 6 [default = false];
    public static final int PARTIAL_FIELD_NUMBER = 6;
    private boolean partial_;
    public boolean hasPartial() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getPartial() {
      return partial_;
    }
    
    private void initFields() {
      filename_ = "";
      size_ = 0L;
      type_ = "";
      chunkCount_ = 0;
      label_ = "";
      partial_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, chunkCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getLabelBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, partial_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getFilenameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, chunkCount_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getLabelBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, partial_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static de.pc2.dedup.fschunk.Protocol.File parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.File parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.File parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.File parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.File parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.File parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.File parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.pc2.dedup.fschunk.Protocol.File parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.pc2.dedup.fschunk.Protocol.File parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.File parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.pc2.dedup.fschunk.Protocol.File prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements de.pc2.dedup.fschunk.Protocol.FileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_File_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_File_fieldAccessorTable;
      }
      
      // Construct using de.pc2.dedup.fschunk.Protocol.File.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        filename_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        chunkCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        label_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        partial_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.pc2.dedup.fschunk.Protocol.File.getDescriptor();
      }
      
      public de.pc2.dedup.fschunk.Protocol.File getDefaultInstanceForType() {
        return de.pc2.dedup.fschunk.Protocol.File.getDefaultInstance();
      }
      
      public de.pc2.dedup.fschunk.Protocol.File build() {
        de.pc2.dedup.fschunk.Protocol.File result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private de.pc2.dedup.fschunk.Protocol.File buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        de.pc2.dedup.fschunk.Protocol.File result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public de.pc2.dedup.fschunk.Protocol.File buildPartial() {
        de.pc2.dedup.fschunk.Protocol.File result = new de.pc2.dedup.fschunk.Protocol.File(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.filename_ = filename_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.chunkCount_ = chunkCount_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.label_ = label_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.partial_ = partial_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.pc2.dedup.fschunk.Protocol.File) {
          return mergeFrom((de.pc2.dedup.fschunk.Protocol.File)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.pc2.dedup.fschunk.Protocol.File other) {
        if (other == de.pc2.dedup.fschunk.Protocol.File.getDefaultInstance()) return this;
        if (other.hasFilename()) {
          setFilename(other.getFilename());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasChunkCount()) {
          setChunkCount(other.getChunkCount());
        }
        if (other.hasLabel()) {
          setLabel(other.getLabel());
        }
        if (other.hasPartial()) {
          setPartial(other.getPartial());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              filename_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              size_ = input.readUInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              type_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              chunkCount_ = input.readUInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              label_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              partial_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string filename = 1;
      private java.lang.Object filename_ = "";
      public boolean hasFilename() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getFilename() {
        java.lang.Object ref = filename_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          filename_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFilename(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        filename_ = value;
        onChanged();
        return this;
      }
      public Builder clearFilename() {
        bitField0_ = (bitField0_ & ~0x00000001);
        filename_ = getDefaultInstance().getFilename();
        onChanged();
        return this;
      }
      void setFilename(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        filename_ = value;
        onChanged();
      }
      
      // optional uint64 size = 2;
      private long size_ ;
      public boolean hasSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getSize() {
        return size_;
      }
      public Builder setSize(long value) {
        bitField0_ |= 0x00000002;
        size_ = value;
        onChanged();
        return this;
      }
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string type = 3;
      private java.lang.Object type_ = "";
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      void setType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
      }
      
      // optional uint32 chunkCount = 4;
      private int chunkCount_ ;
      public boolean hasChunkCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getChunkCount() {
        return chunkCount_;
      }
      public Builder setChunkCount(int value) {
        bitField0_ |= 0x00000008;
        chunkCount_ = value;
        onChanged();
        return this;
      }
      public Builder clearChunkCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        chunkCount_ = 0;
        onChanged();
        return this;
      }
      
      // optional string label = 5;
      private java.lang.Object label_ = "";
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLabel(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        label_ = value;
        onChanged();
        return this;
      }
      public Builder clearLabel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        label_ = getDefaultInstance().getLabel();
        onChanged();
        return this;
      }
      void setLabel(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        label_ = value;
        onChanged();
      }
      
      // optional bool partial = 6 [default = false];
      private boolean partial_ ;
      public boolean hasPartial() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getPartial() {
        return partial_;
      }
      public Builder setPartial(boolean value) {
        bitField0_ |= 0x00000020;
        partial_ = value;
        onChanged();
        return this;
      }
      public Builder clearPartial() {
        bitField0_ = (bitField0_ & ~0x00000020);
        partial_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:de.pc2.dedup.fschunk.File)
    }
    
    static {
      defaultInstance = new File(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:de.pc2.dedup.fschunk.File)
  }
  
  public interface ChunkOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bytes fp = 2;
    boolean hasFp();
    com.google.protobuf.ByteString getFp();
    
    // optional uint32 size = 3;
    boolean hasSize();
    int getSize();
    
    // optional int64 chunkHash = 4;
    boolean hasChunkHash();
    long getChunkHash();
  }
  public static final class Chunk extends
      com.google.protobuf.GeneratedMessage
      implements ChunkOrBuilder {
    // Use Chunk.newBuilder() to construct.
    private Chunk(Builder builder) {
      super(builder);
    }
    private Chunk(boolean noInit) {}
    
    private static final Chunk defaultInstance;
    public static Chunk getDefaultInstance() {
      return defaultInstance;
    }
    
    public Chunk getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_Chunk_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_Chunk_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bytes fp = 2;
    public static final int FP_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString fp_;
    public boolean hasFp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getFp() {
      return fp_;
    }
    
    // optional uint32 size = 3;
    public static final int SIZE_FIELD_NUMBER = 3;
    private int size_;
    public boolean hasSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getSize() {
      return size_;
    }
    
    // optional int64 chunkHash = 4;
    public static final int CHUNKHASH_FIELD_NUMBER = 4;
    private long chunkHash_;
    public boolean hasChunkHash() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getChunkHash() {
      return chunkHash_;
    }
    
    private void initFields() {
      fp_ = com.google.protobuf.ByteString.EMPTY;
      size_ = 0;
      chunkHash_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, fp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, chunkHash_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, fp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, size_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, chunkHash_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static de.pc2.dedup.fschunk.Protocol.Chunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.Chunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.Chunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.Chunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.Chunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.Chunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.Chunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.pc2.dedup.fschunk.Protocol.Chunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static de.pc2.dedup.fschunk.Protocol.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static de.pc2.dedup.fschunk.Protocol.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(de.pc2.dedup.fschunk.Protocol.Chunk prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements de.pc2.dedup.fschunk.Protocol.ChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_Chunk_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return de.pc2.dedup.fschunk.Protocol.internal_static_de_pc2_dedup_fschunk_Chunk_fieldAccessorTable;
      }
      
      // Construct using de.pc2.dedup.fschunk.Protocol.Chunk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        fp_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        chunkHash_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return de.pc2.dedup.fschunk.Protocol.Chunk.getDescriptor();
      }
      
      public de.pc2.dedup.fschunk.Protocol.Chunk getDefaultInstanceForType() {
        return de.pc2.dedup.fschunk.Protocol.Chunk.getDefaultInstance();
      }
      
      public de.pc2.dedup.fschunk.Protocol.Chunk build() {
        de.pc2.dedup.fschunk.Protocol.Chunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private de.pc2.dedup.fschunk.Protocol.Chunk buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        de.pc2.dedup.fschunk.Protocol.Chunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public de.pc2.dedup.fschunk.Protocol.Chunk buildPartial() {
        de.pc2.dedup.fschunk.Protocol.Chunk result = new de.pc2.dedup.fschunk.Protocol.Chunk(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fp_ = fp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.chunkHash_ = chunkHash_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof de.pc2.dedup.fschunk.Protocol.Chunk) {
          return mergeFrom((de.pc2.dedup.fschunk.Protocol.Chunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(de.pc2.dedup.fschunk.Protocol.Chunk other) {
        if (other == de.pc2.dedup.fschunk.Protocol.Chunk.getDefaultInstance()) return this;
        if (other.hasFp()) {
          setFp(other.getFp());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasChunkHash()) {
          setChunkHash(other.getChunkHash());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000001;
              fp_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              size_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              chunkHash_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bytes fp = 2;
      private com.google.protobuf.ByteString fp_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasFp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getFp() {
        return fp_;
      }
      public Builder setFp(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        fp_ = value;
        onChanged();
        return this;
      }
      public Builder clearFp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fp_ = getDefaultInstance().getFp();
        onChanged();
        return this;
      }
      
      // optional uint32 size = 3;
      private int size_ ;
      public boolean hasSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getSize() {
        return size_;
      }
      public Builder setSize(int value) {
        bitField0_ |= 0x00000002;
        size_ = value;
        onChanged();
        return this;
      }
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 chunkHash = 4;
      private long chunkHash_ ;
      public boolean hasChunkHash() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getChunkHash() {
        return chunkHash_;
      }
      public Builder setChunkHash(long value) {
        bitField0_ |= 0x00000004;
        chunkHash_ = value;
        onChanged();
        return this;
      }
      public Builder clearChunkHash() {
        bitField0_ = (bitField0_ & ~0x00000004);
        chunkHash_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:de.pc2.dedup.fschunk.Chunk)
    }
    
    static {
      defaultInstance = new Chunk(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:de.pc2.dedup.fschunk.Chunk)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_de_pc2_dedup_fschunk_ChunkRun_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_pc2_dedup_fschunk_ChunkRun_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_de_pc2_dedup_fschunk_File_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_pc2_dedup_fschunk_File_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_de_pc2_dedup_fschunk_Chunk_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_de_pc2_dedup_fschunk_Chunk_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nfs-c.proto\022\024de.pc2.dedup.fschunk\"\036\n\010Ch" +
      "unkRun\022\022\n\nstart_date\030\001 \002(\t\"o\n\004File\022\020\n\010fi" +
      "lename\030\001 \001(\t\022\014\n\004size\030\002 \001(\004\022\014\n\004type\030\003 \001(\t" +
      "\022\022\n\nchunkCount\030\004 \001(\r\022\r\n\005label\030\005 \001(\t\022\026\n\007p" +
      "artial\030\006 \001(\010:\005false\"4\n\005Chunk\022\n\n\002fp\030\002 \001(\014" +
      "\022\014\n\004size\030\003 \001(\r\022\021\n\tchunkHash\030\004 \001(\003B\nB\010Pro" +
      "tocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_de_pc2_dedup_fschunk_ChunkRun_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_de_pc2_dedup_fschunk_ChunkRun_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_de_pc2_dedup_fschunk_ChunkRun_descriptor,
              new java.lang.String[] { "StartDate", },
              de.pc2.dedup.fschunk.Protocol.ChunkRun.class,
              de.pc2.dedup.fschunk.Protocol.ChunkRun.Builder.class);
          internal_static_de_pc2_dedup_fschunk_File_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_de_pc2_dedup_fschunk_File_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_de_pc2_dedup_fschunk_File_descriptor,
              new java.lang.String[] { "Filename", "Size", "Type", "ChunkCount", "Label", "Partial", },
              de.pc2.dedup.fschunk.Protocol.File.class,
              de.pc2.dedup.fschunk.Protocol.File.Builder.class);
          internal_static_de_pc2_dedup_fschunk_Chunk_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_de_pc2_dedup_fschunk_Chunk_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_de_pc2_dedup_fschunk_Chunk_descriptor,
              new java.lang.String[] { "Fp", "Size", "ChunkHash", },
              de.pc2.dedup.fschunk.Protocol.Chunk.class,
              de.pc2.dedup.fschunk.Protocol.Chunk.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
