#!/usr/bin/python
import sys
import os
import subprocess
    
def help():
    return "fs-c trace [Options]\nfs-c parse [Options]\nnfs-c import [Options]"

def run(cmd):
    return subprocess.Popen(cmd, shell = True, stdout = subprocess.PIPE, stderr = subprocess.STDOUT).stdout.read()

def get_fsc_root():
    mod = sys.modules[__name__]
    return os.path.normpath(os.path.join(os.path.dirname(mod.__file__), ".."))

def from_fsc_root(*args):
    return os.path.normpath(os.path.join(get_fsc_root(), *args))

def get_hadoop_cp():
    cp = []
    dirs = [os.environ["HADOOP_ROOT"],os.path.join(os.environ["HADOOP_ROOT"], "lib")]
    for dir in dirs:
        for file in os.listdir(dir):
            if file.endswith(".jar"):
                cp.append(os.path.join(dir,file))
    cp.append(os.path.join(os.environ["HADOOP_ROOT"], "conf"))
    return cp

def get_cp():
    cp = [from_fsc_root("fs-c-0.2.3.jar")]
    lib_dir = from_fsc_root("lib")
    for file in os.listdir(lib_dir):
        if file.endswith(".jar"):
            cp.append(os.path.join(lib_dir,file))
    cp.append("conf")
    if "HADOOP_ROOT" in os.environ:
    	cp.extend(get_hadoop_cp())
    return cp

def check_python_version():
    v = sys.version_info
    if v[0] != 2 or v[1] < 4:
        raise Exception("No supported python version")

def check_java_version():
    try:
        r = run("java -version")
        supported_version = ["1.5", "1.6", "1.7"]
        for v in supported_version:
            if r.find(v) >= 0:
                return True
    except :
        raise Exception("Failed to detect java version")
    raise Exception("No supported java version found")

if __name__ == "__main__":
    try:
        check_python_version()
        check_java_version()
        
        java_class = None
        if len(sys.argv) < 2:
            print help()
            sys.exit()
        if sys.argv[1] == "trace":
            java_class = "de.pc2.dedup.fschunk.trace.Main"
        elif sys.argv[1] == "parse":
            java_class = "de.pc2.dedup.fschunk.parse.Main"
        elif sys.argv[1] == "import":
        	if not "HADOOP_ROOT" in os.environ:
        		print "HADOOP_ROOT not set"
        		print
        		print help()
        	java_class = "de.pc2.dedup.fschunk.handler.hadoop.Import"
        else:
            print help()
            sys.exit()
        args = ["java"]
        if "FSC_JXM" in os.environ:
            args.append("-Dcom.sun.management.jmxremote")
        if "FSC_XMX" in os.environ:
            args.append("-Xmx%s" % os.environ["FSC_XMX"])
        args.extend(["-cp",":".join(get_cp()),java_class])
        args.extend(sys.argv[2:])
    
        cmd = " ".join(args)
        os.system(cmd)
    except KeyboardInterrupt:
        sys.exit(1)
    except:
        print str(sys.exec_info())
        sys.exit(1)
    sys.exit(0)

